/**
 * Copyright 2014 Fernando Rincon Martin <frm.rincon@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openeos.erp.sales.model;
// Generated Mar 29, 2014 10:10:27 AM by Hibernate Tools 4.0.0
// Template generated from org.openeos.hibernate.hbm2java


import org.openeos.erp.core.model.Country;
import org.openeos.erp.core.model.Organization;
import org.openeos.erp.core.model.Region;
import java.math.BigDecimal;
import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.annotations.GenericGenerator;

/**
 * Tax generated by hbm2java
 */
@Entity
@Table(name="C_TAX"
)
public class Tax  implements java.io.Serializable {


     public static final String PROPERTY_ID = "id";
     public static final String PROPERTY_PARENT = "parent";
     public static final String PROPERTY_ORGANIZATION = "organization";
     public static final String PROPERTY_COUNTRY_BY_C_COUNTRY_ID = "countryByCCountryId";
     public static final String PROPERTY_REGION_BY_TO_C_REGION_ID = "regionByToCRegionId";
     public static final String PROPERTY_REGION_BY_C_REGION_ID = "regionByCRegionId";
     public static final String PROPERTY_TAX_CATEGORY = "taxCategory";
     public static final String PROPERTY_COUNTRY_BY_TO_C_COUNTRY_ID = "countryByToCCountryId";
     public static final String PROPERTY__B_P_TAX_CATEGORY = "BPTaxCategory";
     public static final String PROPERTY_NAME = "name";
     public static final String PROPERTY_DESCRIPTION = "description";
     public static final String PROPERTY_VALIDFROM = "validfrom";
     public static final String PROPERTY_SUMMARY = "summary";
     public static final String PROPERTY_RATE = "rate";
     public static final String PROPERTY_CASCADE = "cascade";
     public static final String PROPERTY_LINE = "line";
     public static final String PROPERTY_CHILDREN = "children";

     private String id;
     private Tax parent;
     private Organization organization;
     private Country countryByCCountryId;
     private Region regionByToCRegionId;
     private Region regionByCRegionId;
     private TaxCategory taxCategory;
     private Country countryByToCCountryId;
     private BPTaxCategory BPTaxCategory;
     private String name;
     private String description;
     private Date validfrom;
     private boolean summary;
     private BigDecimal rate;
     private boolean cascade;
     private Integer line;
     private Set<Tax> children = new HashSet<Tax>(0);

    public Tax() {
    }

	
    public Tax(Organization organization, TaxCategory taxCategory, String name, Date validfrom, boolean summary, BigDecimal rate, boolean cascade) {
        this.organization = organization;
        this.taxCategory = taxCategory;
        this.name = name;
        this.validfrom = validfrom;
        this.summary = summary;
        this.rate = rate;
        this.cascade = cascade;
    }
    public Tax(Tax parent, Organization organization, Country countryByCCountryId, Region regionByToCRegionId, Region regionByCRegionId, TaxCategory taxCategory, Country countryByToCCountryId, BPTaxCategory BPTaxCategory, String name, String description, Date validfrom, boolean summary, BigDecimal rate, boolean cascade, Integer line, Set<Tax> children) {
       this.parent = parent;
       this.organization = organization;
       this.countryByCCountryId = countryByCCountryId;
       this.regionByToCRegionId = regionByToCRegionId;
       this.regionByCRegionId = regionByCRegionId;
       this.taxCategory = taxCategory;
       this.countryByToCCountryId = countryByToCCountryId;
       this.BPTaxCategory = BPTaxCategory;
       this.name = name;
       this.description = description;
       this.validfrom = validfrom;
       this.summary = summary;
       this.rate = rate;
       this.cascade = cascade;
       this.line = line;
       this.children = children;
    }
   
     @GenericGenerator(name="generator", strategy="uuid")@Id @GeneratedValue(generator="generator")

    
    @Column(name="C_TAX_ID", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="PARENT_TAX_ID")
    public Tax getParent() {
        return this.parent;
    }
    
    public void setParent(Tax parent) {
        this.parent = parent;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AD_ORG_ID", nullable=false)
    public Organization getOrganization() {
        return this.organization;
    }
    
    public void setOrganization(Organization organization) {
        this.organization = organization;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="C_COUNTRY_ID")
    public Country getCountryByCCountryId() {
        return this.countryByCCountryId;
    }
    
    public void setCountryByCCountryId(Country countryByCCountryId) {
        this.countryByCCountryId = countryByCCountryId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TO_C_REGION_ID")
    public Region getRegionByToCRegionId() {
        return this.regionByToCRegionId;
    }
    
    public void setRegionByToCRegionId(Region regionByToCRegionId) {
        this.regionByToCRegionId = regionByToCRegionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="C_REGION_ID")
    public Region getRegionByCRegionId() {
        return this.regionByCRegionId;
    }
    
    public void setRegionByCRegionId(Region regionByCRegionId) {
        this.regionByCRegionId = regionByCRegionId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="C_TAXCATEGORY_ID", nullable=false)
    public TaxCategory getTaxCategory() {
        return this.taxCategory;
    }
    
    public void setTaxCategory(TaxCategory taxCategory) {
        this.taxCategory = taxCategory;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="TO_C_COUNTRY_ID")
    public Country getCountryByToCCountryId() {
        return this.countryByToCCountryId;
    }
    
    public void setCountryByToCCountryId(Country countryByToCCountryId) {
        this.countryByToCCountryId = countryByToCCountryId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="C_BP_TAXCATEGORY_ID")
    public BPTaxCategory getBPTaxCategory() {
        return this.BPTaxCategory;
    }
    
    public void setBPTaxCategory(BPTaxCategory BPTaxCategory) {
        this.BPTaxCategory = BPTaxCategory;
    }

    
    @Column(name="NAME", nullable=false, length=60)
    public String getName() {
        return this.name;
    }
    
    public void setName(String name) {
        this.name = name;
    }

    
    @Column(name="DESCRIPTION")
    public String getDescription() {
        return this.description;
    }
    
    public void setDescription(String description) {
        this.description = description;
    }

    @Temporal(TemporalType.DATE)
    @Column(name="VALIDFROM", nullable=false, length=10)
    public Date getValidfrom() {
        return this.validfrom;
    }
    
    public void setValidfrom(Date validfrom) {
        this.validfrom = validfrom;
    }

    
    @Column(name="ISSUMMARY", nullable=false)
    public boolean isSummary() {
        return this.summary;
    }
    
    public void setSummary(boolean summary) {
        this.summary = summary;
    }

    
    @Column(name="RATE", nullable=false, precision=31, scale=8)
    public BigDecimal getRate() {
        return this.rate;
    }
    
    public void setRate(BigDecimal rate) {
        this.rate = rate;
    }

    
    @Column(name="CASCADE", nullable=false)
    public boolean isCascade() {
        return this.cascade;
    }
    
    public void setCascade(boolean cascade) {
        this.cascade = cascade;
    }

    
    @Column(name="LINE")
    public Integer getLine() {
        return this.line;
    }
    
    public void setLine(Integer line) {
        this.line = line;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="parent")
    public Set<Tax> getChildren() {
        return this.children;
    }
    
    public void setChildren(Set<Tax> children) {
        this.children = children;
    }




}


