/**
 * Copyright 2014 Fernando Rincon Martin <frm.rincon@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openeos.numeration.model;
// Generated Mar 13, 2014 8:43:01 PM by Hibernate Tools 4.0.0
// Template generated from org.openeos.hibernate.hbm2java


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

/**
 * SequenceInstance generated by hbm2java
 */
@Entity
@Table(name="nu_sequence_instance"
    , uniqueConstraints = @UniqueConstraint(columnNames={"nu_sequence_id", "pattern_resolved"}) 
)
public class SequenceInstance  implements java.io.Serializable {


     public static final String PROPERTY_ID = "id";
     public static final String PROPERTY_SEQUENCE = "sequence";
     public static final String PROPERTY_PATTERN_RESOLVED = "patternResolved";
     public static final String PROPERTY_OPTLOCK = "optlock";
     public static final String PROPERTY_ACTUAL_NUMBER = "actualNumber";

     private String id;
     private Sequence sequence;
     private String patternResolved;
     private long optlock;
     private long actualNumber;

    public SequenceInstance() {
    }

    public SequenceInstance(Sequence sequence, String patternResolved, long optlock, long actualNumber) {
       this.sequence = sequence;
       this.patternResolved = patternResolved;
       this.optlock = optlock;
       this.actualNumber = actualNumber;
    }
   
     @GenericGenerator(name="generator", strategy="uuid")@Id @GeneratedValue(generator="generator")

    
    @Column(name="nu_sequence_instance_id", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="nu_sequence_id", nullable=false)
    public Sequence getSequence() {
        return this.sequence;
    }
    
    public void setSequence(Sequence sequence) {
        this.sequence = sequence;
    }

    
    @Column(name="pattern_resolved", nullable=false)
    public String getPatternResolved() {
        return this.patternResolved;
    }
    
    public void setPatternResolved(String patternResolved) {
        this.patternResolved = patternResolved;
    }

    
    @Column(name="optlock", nullable=false)
    public long getOptlock() {
        return this.optlock;
    }
    
    public void setOptlock(long optlock) {
        this.optlock = optlock;
    }

    
    @Column(name="actual_number", nullable=false)
    public long getActualNumber() {
        return this.actualNumber;
    }
    
    public void setActualNumber(long actualNumber) {
        this.actualNumber = actualNumber;
    }




}


