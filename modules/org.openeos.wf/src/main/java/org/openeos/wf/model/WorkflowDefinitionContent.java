/**
 * Copyright 2014 Fernando Rincon Martin <frm.rincon@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openeos.wf.model;
// Generated Mar 14, 2014 12:12:59 PM by Hibernate Tools 4.0.0
// Template generated from org.openeos.hibernate.hbm2java


import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;
import org.hibernate.annotations.Parameter;

/**
 * WorkflowDefinitionContent generated by hbm2java
 */
@Entity
@Table(name="wf_definition_content"
    , uniqueConstraints = @UniqueConstraint(columnNames="wf_definition_id") 
)
public class WorkflowDefinitionContent  implements java.io.Serializable {


     public static final String PROPERTY_ID = "id";
     public static final String PROPERTY_WORKFLOW_DEFINITION = "workflowDefinition";
     public static final String PROPERTY_CONTENT = "content";

     private String id;
     private WorkflowDefinition workflowDefinition;
     private byte[] content;

    public WorkflowDefinitionContent() {
    }

    public WorkflowDefinitionContent(WorkflowDefinition workflowDefinition, byte[] content) {
       this.workflowDefinition = workflowDefinition;
       this.content = content;
    }
   
     @GenericGenerator(name="generator", strategy="uuid", parameters=@Parameter(name="property", value="workflowDefinition"))@Id @GeneratedValue(generator="generator")

    
    @Column(name="wf_definition_content_id", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@OneToOne(fetch=FetchType.LAZY)    @JoinColumn(name="wf_definition_id", unique=true, nullable=false)
    public WorkflowDefinition getWorkflowDefinition() {
        return this.workflowDefinition;
    }
    
    public void setWorkflowDefinition(WorkflowDefinition workflowDefinition) {
        this.workflowDefinition = workflowDefinition;
    }

    
    @Column(name="content", nullable=false)
    public byte[] getContent() {
        return this.content;
    }
    
    public void setContent(byte[] content) {
        this.content = content;
    }




}


