/**
 * Copyright 2014 Fernando Rincon Martin <frm.rincon@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openeos.erp.core.model;
// Generated Apr 22, 2014 5:16:14 PM by Hibernate Tools 4.0.0
// Template generated from org.openeos.hibernate.hbm2java


import org.openeos.erp.core.model.list.UserType;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

/**
 * User generated by hbm2java
 */
@Entity
@Table(name="AD_USER"
    , uniqueConstraints = @UniqueConstraint(columnNames="USERNAME") 
)
public class User  implements java.io.Serializable {


     public static final String PROPERTY_ID = "id";
     public static final String PROPERTY_CONTACT = "contact";
     public static final String PROPERTY_DEFAULT_CLIENT = "defaultClient";
     public static final String PROPERTY_DEFAULT_ORGANIZATION = "defaultOrganization";
     public static final String PROPERTY_CLIENT = "client";
     public static final String PROPERTY_USERNAME = "username";
     public static final String PROPERTY_USER_TYPE = "userType";
     public static final String PROPERTY_PASSWORD = "password";
     public static final String PROPERTY_LOCKED = "locked";

     private String id;
     private Contact contact;
     private Client defaultClient;
     private Organization defaultOrganization;
     private Client client;
     private String username;
     private UserType userType;
     private String password;
     private boolean locked;

    public User() {
    }

	
    public User(Contact contact, Client client, String username, UserType userType, boolean locked) {
        this.contact = contact;
        this.client = client;
        this.username = username;
        this.userType = userType;
        this.locked = locked;
    }
    public User(Contact contact, Client defaultClient, Organization defaultOrganization, Client client, String username, UserType userType, String password, boolean locked) {
       this.contact = contact;
       this.defaultClient = defaultClient;
       this.defaultOrganization = defaultOrganization;
       this.client = client;
       this.username = username;
       this.userType = userType;
       this.password = password;
       this.locked = locked;
    }
   
     @GenericGenerator(name="generator", strategy="uuid")@Id @GeneratedValue(generator="generator")

    
    @Column(name="AD_USER_ID", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

@ManyToOne(cascade=CascadeType.ALL, fetch=FetchType.LAZY)
    @JoinColumn(name="AD_CONTACT_ID", nullable=false)
    public Contact getContact() {
        return this.contact;
    }
    
    public void setContact(Contact contact) {
        this.contact = contact;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DEFAULT_CLIENT_ID")
    public Client getDefaultClient() {
        return this.defaultClient;
    }
    
    public void setDefaultClient(Client defaultClient) {
        this.defaultClient = defaultClient;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="DEFAULT_ORG_ID")
    public Organization getDefaultOrganization() {
        return this.defaultOrganization;
    }
    
    public void setDefaultOrganization(Organization defaultOrganization) {
        this.defaultOrganization = defaultOrganization;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="AD_CLIENT_ID", nullable=false)
    public Client getClient() {
        return this.client;
    }
    
    public void setClient(Client client) {
        this.client = client;
    }

    
    @Column(name="USERNAME", unique=true, nullable=false, length=60)
    public String getUsername() {
        return this.username;
    }
    
    public void setUsername(String username) {
        this.username = username;
    }

    
    @Column(name="USERTYPE", nullable=false, length=60)
    public UserType getUserType() {
        return this.userType;
    }
    
    public void setUserType(UserType userType) {
        this.userType = userType;
    }

    
    @Column(name="PASSWORD")
    public String getPassword() {
        return this.password;
    }
    
    public void setPassword(String password) {
        this.password = password;
    }

    
    @Column(name="LOCKED", nullable=false)
    public boolean isLocked() {
        return this.locked;
    }
    
    public void setLocked(boolean locked) {
        this.locked = locked;
    }




}


