/**
 * Copyright 2014 Fernando Rincon Martin <frm.rincon@gmail.com>
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.openeos.jbpm.integration.model;
// Generated 26-jun-2013 15:37:46 by Hibernate Tools 3.2.4.GA
// Template generated from org.openeos.hibernate.hbm2java


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;
import org.hibernate.annotations.GenericGenerator;

/**
 * JbpmProcessInstance generated by hbm2java
 */
@Entity
@Table(name="jbpm_process_instance"
    , uniqueConstraints = @UniqueConstraint(columnNames="jbpm_internal_id") 
)
public class JbpmProcessInstance  implements java.io.Serializable {


     public static final String PROPERTY_ID = "id";
     public static final String PROPERTY_JBPM_INTERNAL_ID = "jbpmInternalId";
     public static final String PROPERTY_PROCESS_ID = "processId";
     public static final String PROPERTY_START_DATE = "startDate";
     public static final String PROPERTY_LAST_READ_DATE = "lastReadDate";
     public static final String PROPERTY_LAST_MODIFICATION_DATE = "lastModificationDate";
     public static final String PROPERTY_STATE = "state";
     public static final String PROPERTY_BYTES = "bytes";
     public static final String PROPERTY_EVENT_TYPE_LIST = "eventTypeList";

     private String id;
     private long jbpmInternalId;
     private String processId;
     private Date startDate;
     private Date lastReadDate;
     private Date lastModificationDate;
     private int state;
     private byte[] bytes;
     private Set<JbpmProcessInstanceEventType> eventTypeList = new HashSet<JbpmProcessInstanceEventType>(0);

    public JbpmProcessInstance() {
    }

	
    public JbpmProcessInstance(long jbpmInternalId, String processId, Date startDate, int state) {
        this.jbpmInternalId = jbpmInternalId;
        this.processId = processId;
        this.startDate = startDate;
        this.state = state;
    }
    public JbpmProcessInstance(long jbpmInternalId, String processId, Date startDate, Date lastReadDate, Date lastModificationDate, int state, byte[] bytes, Set<JbpmProcessInstanceEventType> eventTypeList) {
       this.jbpmInternalId = jbpmInternalId;
       this.processId = processId;
       this.startDate = startDate;
       this.lastReadDate = lastReadDate;
       this.lastModificationDate = lastModificationDate;
       this.state = state;
       this.bytes = bytes;
       this.eventTypeList = eventTypeList;
    }
   
     @GenericGenerator(name="generator", strategy="uuid")@Id @GeneratedValue(generator="generator")

    
    @Column(name="jbpm_process_instance_id", unique=true, nullable=false, length=32)
    public String getId() {
        return this.id;
    }
    
    public void setId(String id) {
        this.id = id;
    }

    
    @Column(name="jbpm_internal_id", unique=true, nullable=false)
    public long getJbpmInternalId() {
        return this.jbpmInternalId;
    }
    
    public void setJbpmInternalId(long jbpmInternalId) {
        this.jbpmInternalId = jbpmInternalId;
    }

    
    @Column(name="process_id", nullable=false)
    public String getProcessId() {
        return this.processId;
    }
    
    public void setProcessId(String processId) {
        this.processId = processId;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="start_date", nullable=false, length=35)
    public Date getStartDate() {
        return this.startDate;
    }
    
    public void setStartDate(Date startDate) {
        this.startDate = startDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_read_date", length=35)
    public Date getLastReadDate() {
        return this.lastReadDate;
    }
    
    public void setLastReadDate(Date lastReadDate) {
        this.lastReadDate = lastReadDate;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="last_modification_date", length=35)
    public Date getLastModificationDate() {
        return this.lastModificationDate;
    }
    
    public void setLastModificationDate(Date lastModificationDate) {
        this.lastModificationDate = lastModificationDate;
    }

    
    @Column(name="state", nullable=false)
    public int getState() {
        return this.state;
    }
    
    public void setState(int state) {
        this.state = state;
    }

    
    @Column(name="bytes")
    public byte[] getBytes() {
        return this.bytes;
    }
    
    public void setBytes(byte[] bytes) {
        this.bytes = bytes;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="jbpmProcessInstance")
    public Set<JbpmProcessInstanceEventType> getEventTypeList() {
        return this.eventTypeList;
    }
    
    public void setEventTypeList(Set<JbpmProcessInstanceEventType> eventTypeList) {
        this.eventTypeList = eventTypeList;
    }




}


